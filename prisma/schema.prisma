// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//generator client {
//  provider = "prisma-client-js"
//  output   = "../src/generated/prisma"
//}

//datasource db {
//  provider = "postgresql"
//  url      = env("DATABASE_URL")
//}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Feed {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  url         String   @unique
  title       String?
  description String?
  items       FeedItem[]
  lastUpdated DateTime @default(now())
  createdAt   DateTime @default(now())
  
  @@map("feeds")
}

model FeedItem {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  feedId      String   @db.ObjectId
  feed        Feed     @relation(fields: [feedId], references: [id], onDelete: Cascade)
  title       String?
  description String?
  link        String?
  pubDate     DateTime?
  guid        String?
  createdAt   DateTime @default(now())
  
  @@map("feed_items")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model LineItem {
  id          String   @id @default(uuid()) @map("_id")
  size        String
  minCpm      Float
  maxCpm      Float
  geo         String?
  adType      String
  frequency   Int
  creativeUrl String
  usedCount   Int      @default(0)
  createdAt   DateTime @default(now())
}
